options:
    pa: %{serverPrefixArrow}%
    p: %{serverPrefix}%
    c1: <##DA6FEA>
    c2: <##E999F5>
    l: <##DA6FEA>‚îÇ
    
on unload:
    delete {-economy::*}
on load:
    registerEconomy("money",  "<#44F666>$<#69F685>",true)
    registerEconomy("credits","<#7CDEE7>‚òÄ<#98EAF1>",true)

    registerEconomy("level",  "<#E99552>‚òÖ<#F6AB6E>")
    registerEconomy("rebirth","<#D7D7D7>‚òÑ<#F1F1F1>")
    registerEconomy("mined",  "<#CFEE61>‚õè<#E0F39B>")
    registerEconomy("kills",  "<#C62B2B>üó°<#E54B4B>")
    registerEconomy("deaths", "<#723737>‚ò†<#995252>")
    registerEconomy("mobs",   "<#7190E5>‚öî<#8FABF8>")
    registerEconomy("fished", "<#38CCE0>üé£<#6DE3F3>")

local function registerEconomy(id:string, symbol:string, pay:boolean=false):
    add {_id} to {-economy::*}
    set {-economy::%{_id}%::pay} to {_pay}
    set {-economy::%{_id}%::symbol} to {_symbol}

command /economy <1:player> <2:string> <3:string> [<4:number>]:
    aliases: /eco, /e
    permission: op
    trigger:
        if {-economy::*} does not contain {_2}:
            send "{@pa}&f This economy does not exist!"
            stop
        if {_3} is not ("look","give","take" or "set"):
            send "{@pa}&f This argument does not exist!"
            stop
        if {_3} = "look":
            send "{@pa}&e %{_1}%&f has %{-economy::%{_2}%::symbol}%%regex({data::%{_2}%::%({_1}'s uuid)%}*1)%"
        else if {_3} = "give":
            add {_4} to {data::%{_2}%::%({_1}'s uuid)%}
            send "{@pa}&f You gave &e%{_1}% %{-economy::%{_2}%::symbol}%%regex({_4}*1)%"
            send "{@pa}&f You have been given %{-economy::%{_2}%::symbol}%%regex({_4}*1)%" to {_1}
        else if {_3} = "take":
            remove {_4} from {data::%{_2}%::%({_1}'s uuid)%}
            send "{@pa}&f You took %{-economy::%{_2}%::symbol}%%regex({_4}*1)%&f from &e%{_1}%"
            send "{@pa}&f %{-economy::%{_2}%::symbol}%%regex({_4}*1)%&f has been taken away" to {_1}
        else if {_3} = "set":
            set {data::%{_2}%::%({_1}'s uuid)%} to {_4}
            send "{@pa}&f You set &e%{_1}%&f %{_2}% to %{-economy::%{_2}%::symbol}%%regex({_4}*1)%"
            send "{@pa}&f You now have %{-economy::%{_2}%::symbol}%%regex({_4}*1)%" to {_1}

on tab complete of ("/economy","/eco","/e"):
    set (tab completions for position 2) to ({-economy::*})
    set (tab completions for position 3) to ("look","give","take" or "set")
    set (tab completions for position 4) to (1,10,100,1000,10000)

command /pay <player:player> <currency:string> <amount:number>:
    trigger:
        if any:
            {-economy::%{_currency}%::pay} is false
            {-economy::%{_currency}%::pay} is not set
        then:
            send "{@pa}&f This is not a valid currency!"
            stop
        if {_amount} < 1:
            send "{@pa}&f Must be %{-economy::%{_currency}%::symbol}%1&f or more"
            stop
        "%{_amount}%" does not contain "-"
        if ({data::%{_currency}%::%(player's uuid)%} ? 0) < {_amount}:
            send "{@pa}&f You do not have enough %{_currency}%"
            stop
        remove {_amount} from {data::%{_currency}%::%(player's uuid)%}
        add {_amount} to {data::%{_currency}%::%({_player}'s uuid)%}
        send "{@pa}&f You payed &e%{_player}%&f %{-economy::%{_currency}%::symbol}%%regex({_amount})%"
        send "{@pa}&e %player%&f payed you %{-economy::%{_currency}%::symbol}%%regex({_amount})%" to {_player}

on tab complete of "/pay":
    loop {-economy::*}:
        add (loop-value) to {_c::*} if {-economy::%(loop-value)%::pay} is true
    set (tab completions for position 2) to ({_c::*})
    set (tab completions for position 3) to (1,10,100,1000,10000)